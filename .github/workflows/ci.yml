name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python test deps
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          pip install maturin pytest pytest-cov coverage

      - name: Build & install Python extension (PyO3)
        run: |
          . .venv/bin/activate
          maturin develop --release --features python

      - name: Ensure rustfmt is installed
        run: |
          rustup component add rustfmt || true

      - name: Rust format check
        run: cargo fmt --all -- --check

      - name: Rust clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Rust tests
        run: cargo test --all --tests --lib

      - name: Python golden / integration tests (reuse Rust output)
        run: |
          . .venv/bin/activate
          pytest -q || true

  rust-coverage:
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install coverage tools
        run: |
          rustup component add llvm-tools-preview || true
          cargo install cargo-llvm-cov || true

      - name: Run coverage (lcov)
        run: |
          cargo llvm-cov --lcov --output-path lcov.info
          head -n 40 lcov.info || true

      - name: Upload rust coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          flags: rust
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  python-coverage:
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install deps & build extension
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          pip install maturin pytest pytest-cov coverage
          maturin develop --release --features python

      - name: Run pytest with coverage
        run: |
          . .venv/bin/activate
          pytest --cov=. --cov-report=xml:coverage.xml --cov-report=term-missing || true
          test -f coverage.xml && sed -n '1,40p' coverage.xml || true

      - name: Upload python coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          flags: python
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
